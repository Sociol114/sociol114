{
  "hash": "5431e2339fe4e9410708c8d2ecca50d4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualization\"\n---\n\n\n\n\n> This topic is covered on Jan 9.\n\n> Prerequisites. You should first install R, RStudio, and the `tidyverse` package as described in the [previous page](topics/r_basics).\n\nVisualizing data is an essential skill for data science. We will write our first code to visualize how countries' level of economic output is related to their level of inequality. We will use data reported in tabular form in [Jencks 2002](https://www.jstor.org/stable/20027737) Table 1, made available in digital form in [jencks_table1.csv](../data/jencks_table1.csv).\n\n## Prepare the environment\n\nOpen a new R Script by clicking the button at the top left of RStudio. Save your R Script in a folder you will use for this exercise by clicking `File -> Save` from the menu at the very top of your screen.\n\n![How to create a new R script in RStudio.](../assets/r_script_screenshot.png)\nPaste the code below into your R Script. Place your cursor within the line and hit `CMD + Return` or `CTRL + Enter` to run the code and load the `tidyverse` package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nYou will see action in the console. You have added some functionality to R for this session!\n\nThe [data](../data/jencks_table1.csv) can be loaded from the course website with the line below.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable1 <- read_csv(file = \"https://soc114.github.io/data/jencks_table1.csv\")\n```\n:::\n\n\n\n\nWhen you run this code, the object `table1` will appear in your environment pane.\n\n## Explore the data\n\nType `table1` in your console. You can see the data!\n\n![](../assets/data_screenshot.png){width=30%}\n\nThe data contain four variables (columns):\n\n- `country` country name\n- `ratio` ratio of 90th to 10th percentile of household income. You can think of this as how many dollars a high-income household receives for each dollar that a low-income household receives\n- `gdp` Gross Domestic Product Per Capita, expressed as a proportion of U.S. GDP\n- `life_expectancy` life expectancy at birth\n\nThere is one row for each country. For details on the data, see Jencks (2002) Table 1.\n\n## Produce a visualization\n\nTo visualize data, we will use the `ggplot()` function which you have already loaded into your R session as part of the `tidyverse` package.\n\n### Begin with an empty graph\n\nA function in R takes in **arguments** and returns an **object**. The arguments are the inputs that we give to the function. The function then returns something back to us.\n\nThe `ggplot()` function takes two arguments:\n\n* `data = table1` says that data will come from the object `table1`\n* `mapping = aes(x = ratio, y = gdp)` maps the data to the aesthetics of the graph. This line says that the `ratio` variable will be placed on the $x$-axis and the `gdp` variable will be on the $y$-axis.\n\nWhen you run this code, the function returns an object which is the resulting plot. The plot will appear in the `Plots` pane in RStudio.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = table1,\n  mapping = aes(x = ratio, y = gdp)\n)\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n### Add a layer to the graph\n\nOnce we have an empty graph, we can add elements to the graph in layers. `ggplot()` is set up to add layers connected by a `+` symbol between lines. For example, we can add points to the graph by adding the layer `geom_point()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = table1,\n  mapping = aes(x = ratio, y = gdp)\n) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n## Customizing your graph\n\nNow it is your turn! Create additional layers with additional lines connected by `+`. Be creative! Here are some ideas:\n\n* add a `geom_smooth()` layer to show the trend in the data\n* add a `geom_text()` layer to label the points with country names. To do so, you will need to add the aesthetic mapping `label = country`.\n     * Pro tip: If you want text to be far from points, install and load the [`ggrepel`](https://ggrepel.slowkow.com/) package and use `geom_text_repel`.\n* add [labels](https://ggplot2.tidyverse.org/reference/labs.html) to your visualization for axes and titles\n* label the axes with `scale_x_continuous(name = \"your text here\")` and `scale_y_continuous(name = \"your text here\")`\n\nThere are many possible graphs to make. An example is below.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Interpret your graph\n\nOnce you are happy with your graph,\n\n- write a few sentences explaining your graph\n- discuss what questions you would like to ask next\n\n\n\n\n{{< video https://www.youtube.com/embed/YWTZ6xxRiP8 >}}\n\n",
    "supporting": [
      "visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}