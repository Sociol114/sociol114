{
  "hash": "d618212d7d95f48a72b557c030b1a119",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualization\"\n---\n\n\n\n\n> This topic is covered on Jan 14.\n\n> Prerequisites. You should first install R, RStudio, and the `tidyverse` package as described in the [previous page](topics/r_basics).\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nVisualizing data is an essential skill for data science. We will write our first code to visualize how countries' level of economic output is related to their level of inequality. We will use data reported in tabular form in [Jencks 2002](https://www.jstor.org/stable/20027737) Table 1, made available in digital form in [jencks_table1.csv](../data/jencks_table1.csv).\n\n## A motivating question: Economic output and inequality\n\n\n\n\n{{< video https://www.youtube.com/embed/3Xi8dw426lQ >}}\n\n\n\n\n\n\nIs economic output higher in countries with higher levels of income inequality? Some argue that this would be the case, for example if high levels of income inequality provide an incentive for hard work and innovation. But is it true?\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nTo begin answering this question, we first have to define measures of economic output (the $y$-axis) and inequality (the $x$-axis).\n\n### Measuring economic output\n\nWe use Gross Domestic Product (GDP) Per Capita as a measure of economic output. This measure captures the total economic production of a country divided by the population of the country. For ease of comparison, our data normalizes GDP per capita by dividing by the U.S. GDP per capita. In our data, Sweden's GDP per capita is recorded as 0.68, indicating that Sweden's GDP per capita was 68\\% as high as the U.S. GDP per capita at the time the data were collected.\n\n### Measuring inequality\n\nTo measure inequality, we consider a measure that asks how many times higher an income at the top of the distribution is compared with an income at the bottom of the distribution. Our measure is called the 90/10 income ratio. We will illustrate this concept using the 2022 U.S. household income distribution, visualized below.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nThis graph is a histogram. The width of each bar in the histogram is \\$25k. The height of each bar shows the number of households with incomes falling within the range of household incomes (x-axis) that correspond to the width of the bar.\n\nThere are two summary statistics: the 90th percentile in blue and the 10th percentile in green. The 90th percentile is the income value such that 90\\% of households have incomes that are lower. 90\\% of the gray mass is to the left of the blue line. The 10th percentile is the income value such that 10\\% of households have incomes that are lower. We can think of the 90th percentile as a measure of a high income in the distribution and the 10th percentile as a measure of a low income in the distribution.\n\nThe 90/10 income ratio is the 90th percentile divided by the 10th percentile. For U.S. household incomes in 2022, this works out as\n\n$$\n\\text{90/10 ratio} = \\frac{\\text{90th percentile}}{\\text{10th percentile}} = \\frac{$212,110}{$15,640} = 13.6\n$$\n\nA higher value of the 90/10 ratio corresponds to higher inequality. In our hypothetical case, a household at the 90th percentile has an income that is 13.6 times as high as the income of a household at the 10th percentile.\n\n## Prepare the environment\n\n\n\n\n{{< video https://www.youtube.com/embed/M5qdJRwC-pY >}}\n\n\n\n\n\n\nOpen a new R Script by clicking the button at the top left of RStudio. Save your R Script in a folder you will use for this exercise by clicking `File -> Save` from the menu at the very top of your screen.\n\n![How to create a new R script in RStudio.](../assets/r_script_screenshot.png)\nPaste the code below into your R Script. Place your cursor within the line and hit `CMD + Return` or `CTRL + Enter` to run the code and load the `tidyverse` package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nYou will see action in the console. You have added some functionality to R for this session!\n\nThe [data](../data/jencks_table1.csv) can be loaded from the course website with the line below.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable1 <- read_csv(file = \"https://soc114.github.io/data/jencks_table1.csv\")\n```\n:::\n\n\n\n\nWhen you run this code, the object `table1` will appear in your environment pane.\n\n## Explore the data\n\nType `table1` in your console. You can see the data!\n\n![](../assets/data_screenshot.png){width=30%}\n\nThe data contain four variables (columns):\n\n- `country` country name\n- `ratio` ratio is the 90/10 income ratio in the country\n- `gdp` is GDP per capita in the country, expressed as a proportion of U.S. GDP\n- `life_expectancy` life expectancy at birth\n\nThere is one row for each country. For details on the data, see Jencks (2002) Table 1.\n\n## Produce a visualization\n\nTo visualize data, we will use the `ggplot()` function which you have already loaded into your R session as part of the `tidyverse` package.\n\n### Begin with an empty graph\n\n\n\n\n{{< video https://www.youtube.com/embed/gU34bo4P7F0 >}}\n\n\n\n\n\n\nA function in R takes in **arguments** and returns an **object**. The arguments are the inputs that we give to the function. The function then returns something back to us.\n\nThe `ggplot()` function takes two arguments:\n\n* `data = table1` says that data will come from the object `table1`\n* `mapping = aes(x = ratio, y = gdp)` maps the data to the aesthetics of the graph. This line says that the `ratio` variable will be placed on the $x$-axis and the `gdp` variable will be on the $y$-axis.\n\nWhen you run this code, the function returns an object which is the resulting plot. The plot will appear in the `Plots` pane in RStudio.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = table1,\n  mapping = aes(x = ratio, y = gdp)\n)\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n### Add a layer to the graph\n\nOnce we have an empty graph, we can add elements to the graph in layers. `ggplot()` is set up to add layers connected by a `+` symbol between lines. For example, we can add points to the graph by adding the layer `geom_point()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = table1,\n  mapping = aes(x = ratio, y = gdp)\n) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n### Improve labels\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = table1,\n  mapping = aes(x = ratio, y = gdp)\n) +\n  geom_point() +\n  labs(\n    x = \"Inequality: 90th percentile / 10th percentile of household income\",\n    y = \"GDP as a Fraction of U.S. GDP\"\n  )\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n### Customize in many ways\n\n\n\n\n{{< video https://www.youtube.com/embed/OsrDakjkyV0 >}}\n\n\n\n\n\n\nThere are many ways to customize the graph. For example, the code below\n\n* loads the `ggrepel` package in order to add country labels to the points\n* uses `geom_smooth` to add a trend line\n* uses `scale_y_continuous` to convert the $y$-axis labels from decimals to percentages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\ntable1 |>\n  ggplot(aes(x = ratio, y = gdp)) +\n  geom_point() +\n  geom_smooth(\n    formula = 'y ~ x',\n    method = \"lm\", \n    se = F, \n    color = \"black\"\n  ) +\n  geom_text_repel(\n    aes(label = country),\n    size = 3\n  ) +\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    name = \"GDP as a Percent of U.S.\"\n  ) +\n  scale_x_continuous(name = \"Inequality: 90th percentile / 10th percentile of household income\") +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](visualization_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "visualization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}